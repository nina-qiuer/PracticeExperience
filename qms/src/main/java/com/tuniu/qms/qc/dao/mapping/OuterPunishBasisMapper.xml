<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tuniu.qms.qc.dao.OuterPunishBasisMapper">
	<resultMap type="com.tuniu.qms.qc.model.OuterPunishBasis" id="basisMap">
			<id column="id" property="id" />
			<result column="opbId" property="opbId" />
			<result column="psId" property="psId" />
			<result column="execFlag" property="execFlag" />
			<result column="addPerson" property="addPerson" />
			<result column="addTime" property="addTime" />
			<result column="updatePerson" property="updatePerson" />
			<result column="updateTime" property="updateTime" />
			<result column="delFlag" property="delFlag" />
			<association property="punishStandard" javaType="com.tuniu.qms.qc.model.PunishStandard">
				<id property="id" column="standardId"/>
				<result column="level" property="level" />
				<result column="redLineFlag" property="redLineFlag" />
				<result column="description" property="description" />
				<result column="punishObj" property="punishObj" />
				<result column="economicPunish" property="economicPunish" />
				<result column="scorePunish" property="scorePunish" />
				<result column="source" property="source" />
				<result column="cmpQcUse" property="cmpQcUse" />
				<result column="operQcUse" property="operQcUse" />
				<result column="devQcUse" property="devQcUse" />
			</association>
		</resultMap>

	<insert id="add" parameterType="com.tuniu.qms.qc.model.OuterPunishBasis">
		INSERT INTO qc_outer_punish_basis (
		
			<if test="opbId != null">opbId,</if>
			<if test="psId != null">psId,</if>
			<if test="execFlag != null">execFlag,</if>
			<if test="addPerson != null">addPerson,</if>
			addTime,
			<if test="updatePerson != null">updatePerson,</if>
			updateTime,
			delFlag
			
		) VALUES (
			<if test="opbId != null">#{opbId},</if>
			<if test="psId != null">#{psId},</if>
			<if test="execFlag != null">#{execFlag},</if>
			<if test="addPerson != null">#{addPerson},</if>
			 CURRENT_TIMESTAMP() ,
			<if test="updatePerson != null">#{updatePerson},</if>
			 CURRENT_TIMESTAMP() ,
			0
		)
	</insert>
	
	
	<delete id="delete" parameterType="Integer">
		DELETE FROM qc_outer_punish_basis WHERE id=#{id}
	</delete>
	
	
	<sql id="listSql">
		SELECT opb.*,ps.level,ps.redLineFlag,ps.description,ps.economicPunish,ps.scorePunish 
		 from qc_outer_punish_basis opb left join qc_punish_standard ps
		 on opb.psId = ps.id and ps.delFlag = 0
		 where opb.delFlag =0 
			<if test="id != null ">AND opb.id=#{id}</if>
			<if test="opbId != null ">AND opb.opbId=#{opbId}</if>
	</sql>
	
	<select id="list" parameterType="com.tuniu.qms.qc.dto.OuterPunishBasisDto" resultMap="basisMap">
		<include refid="listSql"/>
		ORDER BY opb.id 
		<if test="dataLimitStart != null">
			limit #{dataLimitStart}
			<if test="pageSize != null">
				,#{pageSize}
			</if>
		</if>
	</select>
	
	<select id="count" parameterType="com.tuniu.qms.qc.dto.OuterPunishBasisDto" resultType="Integer">
		SELECT COUNT(1) FROM(
			<include refid="listSql"></include>
		) t
		
	</select>
	
	
	<select id="get" parameterType="Integer"  resultMap="basisMap">
	
		SELECT opb.*,ps.level,ps.redLineFlag,ps.description,ps.economicPunish,ps.scorePunish 
		 from qc_outer_punish_basis opb left join qc_punish_standard ps
		 on opb.psId = ps.id and ps.delFlag = 0
		 where opb.delFlag =0 
		<if test="id != null ">AND opb.id=#{id}</if>
		<if test="opbId != null ">AND opb.opbId=#{opbId}</if>
	</select>
	
	<update id="update" parameterType="com.tuniu.qms.qc.model.OuterPunishBasis" >
		UPDATE qc_outer_punish_basis 
		<set>
			<if test="opbId != null">opbId = #{opbId},</if>
			<if test="psId != null">psId = #{psId},</if>
			<if test="execFlag != null">execFlag = #{execFlag},</if>
			<if test="updatePerson != null">updatePerson =#{updatePerson},</if>
			updateTime = CURRENT_TIMESTAMP
		</set>
		WHERE id=#{id}
	</update>
	
	<delete id="deletePunish" parameterType="com.tuniu.qms.qc.model.OuterPunishBasis">
	
	     delete from qc_outer_punish_basis where opbId =#{opbId}
	
	</delete>
	
	<update id="updatePunish" parameterType="com.tuniu.qms.qc.model.OuterPunishBasis" >
		UPDATE qc_outer_punish_basis
		 set execFlag = #{execFlag}
		 WHERE opbId=#{opbId}
	</update>
	
	<update id="updatePunishBill" parameterType="com.tuniu.qms.qc.model.OuterPunishBasis">
	    UPDATE qc_outer_punish_bill qb
			  INNER JOIN (SELECT
			                opb.opbId,
			                ps.economicPunish,
			                ps.scorePunish
			                FROM qc_outer_punish_basis opb
			                INNER JOIN qc_punish_standard ps
			                 ON opb.psId = ps.id
			                 AND ps.delFlag = 0
			               WHERE opb.id = #{id} and opb.opbId =#{opbId}
			                  AND opb.delFlag = 0) qc
			    ON qb.id = qc.opbId
			SET qb.economicPunish = qc.economicPunish,
			  qb.scorePunish = qc.scorePunish
			WHERE  qb.id = #{opbId}
	
	
	</update>
	
		
	<delete id="deletePunishByOpb" parameterType="java.util.Map">
	
	  DELETE FROM qc_outer_punish_basis WHERE opbId IN (
	    <foreach collection="outerList" item="opbId" separator=",">
	   	#{opbId}
	  	</foreach> 
		)
	</delete>
	
	
	<select id="getPunishBasisIsExist" parameterType="java.util.Map" resultType="Integer">
	
	  select count(1) from qc_outer_punish_basis where opbId =#{opbId} and delFlag = 0
	 
	</select>
	
	<insert id="addCopyOuterBasis" parameterType="java.util.Map" >
	   insert into qc_outer_punish_basis
	   (
		    opbId,
		    psId,
		    execFlag,
			addPerson,
			delFlag
	   )
	   select #{punishId},
	           b.psId,
			   b.execFlag,
			   #{addPerson},
			   b.delFlag
	    from qc_outer_punish_basis b where b.opbId =#{oldPunishId} and b.delFlag =0 
	</insert>
	
</mapper>