<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuniu.qms.qs.dao.QualityCostAuxAccountMapper">
	
	<insert id="add" parameterType="com.tuniu.qms.qs.model.QualityCostAuxAccount">
		INSERT INTO qs_quality_cost_auxaccount (
		    <if test="ispId != null">ispId,</if>
		    <if test="qcId != null">qcId,</if>
		    <if test="cmpId != null">cmpId,</if>
			<if test="firstCostAccount != null">firstCostAccount,</if>
			<if test="twoCostAccount != null">twoCostAccount,</if>
			<if test="threeCostAccount != null">threeCostAccount,</if>
			<if test="fourCostAccount != null">fourCostAccount,</if>
			<if test="firstDepId != null">firstDepId,</if>
			<if test="firstDepName != null">firstDepName,</if>
			<if test="twoDepId != null">twoDepId,</if>
			<if test="twoDepName != null">twoDepName,</if>
			<if test="threeDepId != null">threeDepId,</if>
			<if test="threeDepName != null">threeDepName,</if>
			<if test="respRate != null">respRate,</if>
			<if test="qualityCost != null">qualityCost,</if>
			<if test="dealPersonId != null">dealPersonId,</if>
			<if test="dealPersonName != null">dealPersonName,</if>
			<if test="addPerson != null">addPerson,</if>
			<if test="addTime != null">addTime,</if>
			delFlag
			
		) VALUES (
		
			<if test="ispId != null">#{ispId},</if>
		    <if test="qcId != null">#{qcId},</if>
		    <if test="cmpId != null">#{cmpId},</if>
			<if test="firstCostAccount != null">#{firstCostAccount},</if>
			<if test="twoCostAccount != null">#{twoCostAccount},</if>
			<if test="threeCostAccount != null">#{threeCostAccount},</if>
			<if test="fourCostAccount != null">#{fourCostAccount},</if>
			<if test="firstDepId != null">#{firstDepId},</if>
			<if test="firstDepName != null">#{firstDepName},</if>
			<if test="twoDepId != null">#{twoDepId},</if>
			<if test="twoDepName != null">#{twoDepName},</if>
			<if test="threeDepId != null">#{threeDepId},</if>
			<if test="threeDepName != null">#{threeDepName},</if>
			<if test="respRate != null">#{respRate},</if>
			<if test="qualityCost != null">#{qualityCost},</if>
			<if test="dealPersonId != null">#{dealPersonId},</if>
			<if test="dealPersonName != null">#{dealPersonName},</if>
			<if test="addPerson != null">#{addPerson},</if>
			<if test="addTime != null">#{addTime},</if>
			0
		)
	</insert>
	
	<insert id="addBatch"  parameterType="java.util.List" >
		insert into qs_quality_cost_auxaccount (
			ispId, 
			qcId, 
			cmpId,
			prdLineId,
			firstCostAccount, 
			twoCostAccount, 
			threeCostAccount,
			fourCostAccount,
			firstDepId,
			firstDepName,
			twoDepId,
			twoDepName,
			threeDepId,
			threeDepName,
			respRate,
			dealPersonId,
			dealPersonName,
			addPerson,
			addTime,
			qualityCost,
			year,
			yearQuarter,
			yearMonth,
			yearWeek
		) values 
        <foreach collection="list" item="e" index="index" separator=",">
        (
            #{e.ispId},
			#{e.qcId},
			#{e.cmpId},
			#{e.prdLineId},
			#{e.firstCostAccount},
			#{e.twoCostAccount},
			#{e.threeCostAccount},
			#{e.fourCostAccount},
			#{e.firstDepId},	
			#{e.firstDepName},
			#{e.twoDepId},
			#{e.twoDepName},
			#{e.threeDepId},
			#{e.threeDepName},
			#{e.respRate},
			#{e.dealPersonId},
			#{e.dealPersonName},
			#{e.addPerson},
			#{e.addTime},
			#{e.qualityCost},	
			#{e.year},
			#{e.yearQuarter},
			#{e.yearMonth},
			#{e.yearWeek}
        )
        </foreach>
    </insert>
	
	<delete id="deleteByQcId" parameterType="Integer">
		DELETE FROM qs_quality_cost_auxaccount WHERE qcId=#{qcId} AND firstCostAccount='质量损失'
	</delete>
	
	<delete id="deleteByCmpId" parameterType="Integer">
		DELETE FROM qs_quality_cost_auxaccount WHERE cmpId=#{cmpId} AND firstCostAccount IN ('质量工具','不成团')
	</delete>

	<update id="updateByCmpId" parameterType="com.tuniu.qms.qs.model.QualityCostAuxAccount" >
		UPDATE qs_quality_cost_auxaccount 
		<set>
			<if test="qualityCost != null">qualityCost = #{qualityCost}*respRate/100,</if> 
			updateTime=CURRENT_TIMESTAMP
		</set>
		WHERE cmpId=#{cmpId} and firstCostAccount='质量损失'
	</update>
	
	<select id="listAllDep"  resultType="com.tuniu.qms.qs.model.QualityCostAuxAccount">
	   SELECT DISTINCT firstDepId,firstDepName,twoDepId,twoDepName,threeDepId,threeDepName
	   FROM qs_quality_cost_auxaccount WHERE firstCostAccount='质量损失' AND delFlag=0
	</select>
	
	<select id="listUseDep"   resultType="com.tuniu.qms.qs.model.QualityCostAuxAccount">
	    SELECT DISTINCT a.firstDepId,a.firstDepName,a.twoDepId,a.twoDepName,a.threeDepId,a.threeDepName 
		FROM qs_quality_cost_auxaccount a  
		INNER JOIN uc_department b ON a.firstDepId = b.id AND a.firstDepName = b.name AND b.delFlag =0
		WHERE a.firstCostAccount='质量损失' AND a.delFlag=0 AND a.twoDepId=0 AND a.threeDepId=0  
		UNION 
		SELECT DISTINCT a.firstDepId,a.firstDepName,a.twoDepId,a.twoDepName,a.threeDepId,a.threeDepName 
		FROM qs_quality_cost_auxaccount a  
		INNER JOIN uc_department b ON a.twoDepId = b.id AND a.twoDepName = b.name AND a.firstDepId = b.pid   AND b.delFlag =0 
		INNER JOIN uc_department c ON a.firstDepId = c.id AND a.firstDepName = c.name AND b.pid = c.id  AND c.delFlag =0 
		WHERE a.firstCostAccount='质量损失' AND a.threeDepId=0 AND a.delFlag=0  
		UNION 
		SELECT DISTINCT a.firstDepId,a.firstDepName,a.twoDepId,a.twoDepName,a.threeDepId,a.threeDepName
		FROM qs_quality_cost_auxaccount a  
		INNER JOIN  uc_department b ON a.threeDepId = b.id AND  a.threeDepName = b.name AND a.twoDepId = b.pid   AND b.delFlag =0 
		INNER JOIN  uc_department c ON a.twoDepId = c.id  AND a.twoDepName = c.name  AND c.id = b.pid  AND c.delFlag =0
		INNER JOIN  uc_department d ON a.firstDepId = d.id AND a.firstDepName = d.name AND d.id = c.pid  AND d.delFlag =0
		WHERE a.firstCostAccount='质量损失' AND a.delFlag=0 AND a.threeDepId>0 
	</select>
	
	<sql id="listSql">
		SELECT qc.*,qb.ordId FROM qs_quality_cost_auxaccount qc LEFT JOIN qc_qc_bill  qb ON qb.id =qc.qcId and qb.delFlag =0
		<where>
			qc.delFlag=0 
			and qc.qualityCost >0
			<if test="id != null and id!='' ">AND qc.id=#{id}</if>
			<if test="ispId != null ">AND qc.ispId=#{ispId}</if>
			<if test="qcId != null   ">AND qc.qcId=#{qcId}</if>
			<if test="ordId != null  ">AND qb.ordId=#{ordId}</if>
		    <if test="firstCostAccount != null and firstCostAccount!=''">AND qc.firstCostAccount=#{firstCostAccount}</if>
			<if test="twoCostAccount != null and twoCostAccount!=''">AND qc.twoCostAccount=#{twoCostAccount}</if>
			<if test="threeCostAccount != null and threeCostAccount!=''">AND qc.threeCostAccount=#{threeCostAccount}</if>
			<if test="fourCostAccount != null and fourCostAccount!=''">AND qc.fourCostAccount=#{fourCostAccount}</if>	
			<if test="firstDepId != null and firstDepId!=''">AND qc.firstDepId=#{firstDepId}</if>
			<if test="twoDepId != null and twoDepId!=''">AND qc.twoDepId=#{twoDepId}</if>
			<if test="threeDepId != null and threeDepId!=''">AND qc.threeDepId=#{threeDepId}</if>
			<if test="dealPersonName != null and dealPersonName!=''">AND qc.dealPersonName=#{dealPersonName}</if>	
			<if test="addTimeBgn != null and addTimeBgn!='' ">AND qc.addTime &gt;=#{addTimeBgn}</if>
			<if test="addTimeEnd != null and addTimeEnd!='' ">AND qc.addTime &lt;=concat(#{addTimeEnd},' 23:59:59')</if>						
		</where>
	</sql>
	
	<select id="list" parameterType="com.tuniu.qms.qs.dto.QualityCostAuxAccountDto" resultType="com.tuniu.qms.qs.model.QualityCostAuxAccount">
		<include refid="listSql"/>
		ORDER BY 
		<if test="orderDirect !=0">
			<if test="orderField !=null">
				${orderField}
				<if test="orderDirect==1">
					desc
				</if>
			</if>
		</if>
		<if test="orderDirect==0">
				qc.qcId desc
		</if>
		<if test="dataLimitStart != null">
			limit #{dataLimitStart}
			<if test="pageSize != null">,#{pageSize}</if>
		</if>
	</select>
	
	<select id="count" parameterType="com.tuniu.qms.qs.dto.QualityCostAuxAccountDto" resultType="Integer">
		SELECT COUNT(1) FROM(
			<include refid="listSql"></include>
		) t
		
	</select>
	
	<select id="listByDep" parameterType="Map" resultType="com.tuniu.qms.qs.model.QualityCostAuxAccount">
	    select  id,
	            ispId,
				qcId,
				cmpId,
				firstCostAccount,
				twoCostAccount,
				threeCostAccount,
				fourCostAccount,
				respRate,
				qualityCost,
				dealPersonId,
				dealPersonName,
				addPerson,
				addTime
	          from qs_quality_cost_auxaccount
	           where delFlag = 0 
	          and firstDepId = #{firstDepId} and twoDepId =#{twoDepId} and threeDepId =#{threeDepId} and firstCostAccount='质量损失'
	</select>
	
	<delete id="delete" parameterType="Integer">
		DELETE FROM qs_quality_cost_auxaccount WHERE id=#{id}
	</delete>
	
	<update id="updateDep" parameterType="com.tuniu.qms.qs.model.QualityCostAuxAccount">
		UPDATE qs_quality_cost_auxaccount 
		<set>
			<if test="firstDepId != null">firstDepId=#{firstDepId},</if>
			<if test="firstDepName != null">firstDepName=#{firstDepName},</if>
			<if test="twoDepId != null">twoDepId=#{twoDepId},</if>
			<if test="twoDepName != null">twoDepName=#{twoDepName},</if>
			<if test="threeDepId != null">threeDepId=#{threeDepId},</if>
			<if test="threeDepName != null">threeDepName=#{threeDepName},</if>
			updateTime=CURRENT_TIMESTAMP
		</set>
		WHERE 
			<if test="flag == 1">
			
			   firstDepId=#{firstDepId} 
			   AND twoDepId=0 
			   AND threeDepId =0
			
			</if>
		   <if test="flag == 2">
			
			twoDepId=#{twoDepId} 
			AND threeDepId =0
			
			</if>
			<if test="flag == 3">
			
			 threeDepId=#{threeDepId} 
			
			</if>
		
	</update>
	
	<select id="listPrdLineDepInfos" resultType="com.tuniu.qms.qs.model.QualityCostAuxAccount">
		SELECT DISTINCT prdLineId,firstDepId,firstDepName,twoDepId,twoDepName,threeDepId,threeDepName
		FROM qs_quality_cost_auxaccount WHERE prdLineId>0 AND firstCostAccount IN ('质量工具','不成团') AND delFlag=0
	</select>
	
	<update id="updateDepByPrdLineId" parameterType="com.tuniu.qms.common.dto.PrdLineDepInfoDto">
		UPDATE qs_quality_cost_auxaccount 
		SET firstDepId=#{businessUnitId},
			firstDepName=#{businessUnitName},
			twoDepId=#{prdDepId},
			twoDepName=#{prdDepName},
			threeDepId=#{prdTeamId},
			threeDepName=#{prdTeamName},
			updateTime=CURRENT_TIMESTAMP
		WHERE prdLineId=#{prdLineId}
	</update>
	
</mapper>
