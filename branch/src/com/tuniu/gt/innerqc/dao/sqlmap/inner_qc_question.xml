<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tuniu.gt.innerqc.dao.sqlmap.imap.InnerQcQuestionMap">
	<sql id="whereSql">
		<where>1=1
			<if test="iqcId != 0">and iqc_id=#{iqcId}</if>
			and del_flag = 0 order by id asc
		</where>
	</sql>

	<select id="getQuestionList" parameterType="com.tuniu.gt.innerqc.entity.InnerQcQuestionEntity" resultMap="listResultEntity">
		SELECT *,
			(SELECT parent_id FROM ct_qc_question_class WHERE id=qc_inner_qc_question.question_type_id) AS question_class_id1,
			(SELECT description FROM ct_qc_question_class WHERE id=(SELECT parent_id FROM ct_qc_question_class WHERE id=qc_inner_qc_question.question_type_id)) AS big_class_name,
			(SELECT description FROM ct_qc_question_class WHERE id=qc_inner_qc_question.question_type_id) AS small_class_name
		FROM qc_inner_qc_question
		<include refid="whereSql" />
	</select>
	
	<resultMap id="listResultEntity" type="com.tuniu.gt.innerqc.entity.InnerQcQuestionEntity">
		<result property="id" column="id" />
		<result property="iqcId" column="iqc_id" />
		<result property="description" column="description" />
		<result property="questionClassId1" column="question_class_id1" />
		<result property="bigClassName" column="big_class_name" />
		<result property="smallClassName" column="small_class_name" />
		<result property="questionTypeId" column="question_type_id" />
		<result property="questionLevel" column="question_level" />
		<result property="verifyBasis" column="verify_basis" />
		<result property="conclusion" column="conclusion" />
		<result property="addPersonId" column="add_person_id" />
		<result property="addTime" column="add_time" />
		<result property="updateTime" column="update_time" />
		<result property="delFlag" column="del_flag" />
	</resultMap>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id"
		parameterType="Map" flushCache="true" statementType="PREPARED">
		<include refid="insert" />
	</insert>
	
	<sql id="insert">
		<include refid="tuniu.frm.core.IMapBase.insertBasic" />
		(
			iqc_id, 
			description, 
			question_type_id, 
			question_level, 
			verify_basis, 
			conclusion, 
			add_person_id
		) values (
			#{e.iqcId},
			#{e.description},
			#{e.questionTypeId},
			#{e.questionLevel},
			#{e.verifyBasis},
			#{e.conclusion},
			#{e.addPersonId}
		)
	</sql>
	
	<update id="update" parameterType="Map" flushCache="true" statementType="PREPARED">
		<include refid="update" />
	</update>
	<sql id="update">
		<include refid="tuniu.frm.core.IMapBase.updateBasic" />
		<set>
			<if test="e.description != null">description=#{e.description},</if>
			<if test="e.questionTypeId != null">question_type_id=#{e.questionTypeId},</if>
			<if test="e.questionLevel != null">question_level=#{e.questionLevel},</if>
			<if test="e.verifyBasis != null">verify_basis=#{e.verifyBasis},</if>
			<if test="e.conclusion != null">conclusion=#{e.conclusion},</if>
			<if test="e.delFlag != null">del_flag=#{e.delFlag},</if>
			update_time=CURRENT_TIMESTAMP
		</set>
		where id=#{e.id}
	</sql>
	
	<select id="get" parameterType="Map" resultMap="listResultEntity">
		SELECT *,
			(SELECT parent_id FROM ct_qc_question_class WHERE id=qc_inner_qc_question.question_type_id) AS question_class_id1,
			(SELECT description FROM ct_qc_question_class WHERE id=(SELECT parent_id FROM ct_qc_question_class WHERE id=qc_inner_qc_question.question_type_id)) AS big_class_name,
			(SELECT description FROM ct_qc_question_class WHERE id=qc_inner_qc_question.question_type_id) AS small_class_name
		FROM qc_inner_qc_question WHERE id=#{id} limit 1
	</select>
	
	<delete id="delete">
		<include refid="tuniu.frm.core.IMapBase.deleteBasic"/> where id =#{id}
	</delete>
	
	<delete id="deleteByIqcId" parameterType="Integer">
		DELETE FROM qc_inner_qc_question WHERE iqc_id = #{iqcId}
	</delete>
	
</mapper>
