<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tuniu.gt.complaint.dao.sqlmap.imap.IQcTimeoutMap">

	<select id="queryQctimeout" resultType="Map" parameterType="Map">
		<![CDATA[
		SELECT a.id, a.add_time, a.distribution_date, a.finish_date AS qc_finish, b.finish_date AS ct_finish, a.status, b.state
		FROM ct_qc a LEFT JOIN ct_complaint b ON a.complaint_id = b.id 
		WHERE a.del_flag = 0 AND b.del_flag = 0 AND b.state = 4 
		AND a.id NOT IN (SELECT qc_id FROM ct_qc_timeout WHERE del_flag = 0) 
		AND ((a.finish_date > #{start} AND a.finish_date < #{end} AND a.status = 2) OR (a.status = 1))
		]]>
	</select>
	
	<insert id="addTimeoutRecord" useGeneratedKeys="true" keyProperty="id"
		parameterType="java.util.List" flushCache="true" statementType="PREPARED">
			insert into ct_qc_timeout (
			qc_id,
			qc_person_id,
			qc_person_name,
			record_date
			) values
		<foreach collection="list" item="e" index="index" separator=",">
			(
			#{e.qcId},
			#{e.qcPersonId},
			#{e.qcPersonName},
			#{e.recordDate}
			)
        </foreach>
	</insert>
	
	<select id="queryAllQctimeoutQcid" resultType="Map" parameterType="Map">
		SELECT
		  b.id AS qcid,
		  b.add_time,
		  b.distribution_date,
		  c.finish_date       AS ct_finish,
		  b.finish_date       AS qc_finish,
		  b.status,
		  c.state
		FROM ct_qc_timeout a
		  LEFT JOIN ct_qc b
		    ON a.qc_id = b.id
		  LEFT JOIN ct_complaint c
		    ON c.id = b.complaint_id
		WHERE 1 = 1
		    AND a.del_flag = 0
	</select>
	
	<update id="delReTimeOut" parameterType="String" flushCache="true">
		UPDATE ct_qc_timeout SET del_flag = 1 WHERE qc_id IN (${_parameter});
	</update>
</mapper>
