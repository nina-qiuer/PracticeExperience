<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  

<mapper namespace="com.tuniu.gt.complaint.dao.sqlmap.imap.IAgencyPayoutMap"> 

    <resultMap id="listResultEntity" type="com.tuniu.gt.complaint.entity.AgencyPayoutEntity">  
		<result property="id" column="id" />
		<result property="supportId" column="support_id" />
		<result property="complaintInfo" column="complaint_info" />
		<result property="payoutBase" column="payout_base" />
		<result property="payoutNum" column="payout_num" />
		<result property="foreignCurrencyNumber" column="foreignCurrencyNumber" />
		<result property="addTime" column="add_time" />
		<result property="updateTime" column="update_time" />
		<result property="delFlag" column="del_flag" />
	</resultMap>
	
	<sql id="list">
		<include refid="tuniu.frm.core.IMapBase.fetchListBasic"/>
		<where>
			del_flag = 1
			<if test="id!=null">
				and id=#{id}
			</if>
			<if test="supportId != null">
				and support_id=#{supportId}
			</if>
		</where>
	</sql>
	
	<select id="fetchList" parameterType="Map"  resultMap="listResultEntity">
		<include refid="list"/>
	</select>
	
	<sql id="insert">
		<include refid="tuniu.frm.core.IMapBase.insertBasic"/>
		(
		  support_id,
		  complaint_info,
		  payout_base,
		  payout_num,
		  foreignCurrencyNumber
		) values (
		  #{e.supportId},
		  #{e.complaintInfo},
		  #{e.payoutBase},
		  #{e.payoutNum},
		  #{e.foreignCurrencyNumber}
		)
	</sql>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Map" flushCache="true" statementType="PREPARED"> 
		<include refid="insert"/>
	</insert>
	
	<sql id="update">
		<include refid="tuniu.frm.core.IMapBase.updateBasic"/>
		<set>  
			<if test="e.delFlag != null">del_flag=#{e.delFlag},</if>
			<if test="e.updateTime != null">update_time=#{e.updateTime}</if>
		</set>
	    where id=#{e.id}
	</sql>	
	
	<update id="update" parameterType="Map" flushCache="true" statementType="PREPARED">
		<include refid="update"/>
	</update>
	
	<delete id="deleteBySupportId" parameterType="Integer">
		DELETE FROM ct_agency_payout WHERE support_id = #{supportId}
	</delete>
	
	<update id="updateSupportId" parameterType="Map" flushCache="true" statementType="PREPARED">
		UPDATE ct_agency_payout SET support_id=#{supportId} WHERE agency_id=#{agencyId} AND complaint_id=#{complaintId}
	</update>
	
</mapper>
