<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  

<mapper namespace="com.tuniu.gt.complaint.dao.sqlmap.imap.ICheckEmailMap"> 
	<sql id="list">
		<include refid="tuniu.frm.core.IMapBase.fetchListBasic"/>
		<where>
			<if test="complaintId!=null">
				complaint_id=#{complaintId}
			</if>
		</where>
		order by id
		<if test="dataLimitStart != null">
			limit #{dataLimitStart}
			<if test="dataLimitEnd != null">
				,#{dataLimitEnd}
			</if>
		</if>
	</sql>
	<select id="fetchList" parameterType="Map"  resultMap="listResultEntity">
		<include refid="list"/>
	</select>
	<resultMap id="listResultEntity" type="com.tuniu.gt.complaint.entity.CheckEmailEntity">  
		
		<result property="complaintId" column="complaint_id" />
		
		<result property="buildDate" column="build_date" />
		
		<result property="mark" column="mark" />
		
		<result property="title" column="title" />
		
		<result property="content" column="content" />
		
		<result property="attachId" column="attach_id" />
		
		<result property="cc" column="cc" />
		
		<result property="sender" column="sender" />
		
		<result property="address" column="address" />
		
	</resultMap>
	
	
	<select id="fetchListMap" parameterType="Map"  resultMap="listResultMap">
		<include refid="list"/>
	</select>
	<resultMap id="listResultMap" type="Map">
		
		<result property="complaintId" column="complaint_id"/>
		
		<result property="buildDate" column="build_date"/>
		
		<result property="mark" column="mark"/>
		
		<result property="title" column="title"/>
		
		<result property="content" column="content"/>
		
		<result property="attachId" column="attach_id"/>
		
		<result property="cc" column="cc"/>
		
		<result property="sender" column="sender"/>
		
		<result property="address" column="address"/>
		
	</resultMap>
	
	
	<select id="get" parameterType="Map"  resultMap="listResultEntity">
		<include refid="tuniu.frm.core.IMapBase.fetchListBasic"/>
		where id=#{id} limit 1
	</select>
	
	
	<sql id="insert">
		<include refid="tuniu.frm.core.IMapBase.insertBasic"/>
		(
		  complaint_id,
		 
		  build_date,
		 
		  mark,
		 
		  title,
		 
		  content,
		 
		  attach_id,
		 
		  cc,
		 
		  sender,
		 
		  address
		 
		) values  (
		
		  #{e.complaintId}, 
		 
		  #{e.buildDate}, 
		 
		  #{e.mark}, 
		 
		  #{e.title}, 
		 
		  #{e.content}, 
		 
		  #{e.attachId}, 
		 
		  #{e.cc}, 
		 
		  #{e.sender}, 
		 
		  #{e.address} 
		 
		)
	</sql>
		
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Map" flushCache="true" statementType="PREPARED" > 
		<include refid="insert"/>
	</insert>
	
	<sql id="update">
		<include refid="tuniu.frm.core.IMapBase.updateBasic"/>
		<set>  
			
				<if test="e.complaintId != null">complaint_id=#{e.complaintId},</if>
			
				<if test="e.buildDate != null">build_date=#{e.buildDate},</if>
			
				<if test="e.mark != null">mark=#{e.mark},</if>
			
				<if test="e.title != null">title=#{e.title},</if>
			
				<if test="e.content != null">content=#{e.content},</if>
			
				<if test="e.attachId != null">attach_id=#{e.attachId},</if>
			
				<if test="e.cc != null">cc=#{e.cc},</if>
			
				<if test="e.sender != null">sender=#{e.sender},</if>
			
				<if test="e.address != null">address=#{e.address}</if>
			
		</set>
	    where id=#{e.id}
	</sql>	
	
	
	<update id="update" parameterType="Map" flushCache="true" statementType="PREPARED">
		<include refid="update"/>
	</update>
	
</mapper>
