<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  

<mapper namespace="com.tuniu.gt.complaint.dao.sqlmap.imap.IReceiverEmailMap"> 
	<sql id="list">
		<include refid="tuniu.frm.core.IMapBase.fetchListBasic"/>
		<where>
			del_flag="1"
			<if test="type != null">
				and type = #{type}
			</if>
			<if test="userId != null">
				and user_id = #{userId}
			</if>
			<if test="receiverType != null">
				and receiver_type = #{receiverType}
			</if>
			<if test="orderState != null">
				and order_state = #{orderState}
			</if>
		</where>
		<if test="dataLimitStart != null">
			limit #{dataLimitStart}
			<if test="dataLimitEnd != null">
				,#{dataLimitEnd}
			</if>
		</if>
	</sql>
	<select id="fetchList" parameterType="Map"  resultMap="listResultEntity">
		<include refid="list"/>
	</select>
	<resultMap id="listResultEntity" type="com.tuniu.gt.complaint.entity.ReceiverEmailEntity">  
		
		<result property="delFlag" column="del_flag" />
		
		<result property="updateTime" column="update_time" />
		
		<result property="addTime" column="add_time" />
		
		<result property="departmentName" column="department_name" />
		
		<result property="departmentId" column="department_id" />
		
		<result property="userName" column="user_name" />
		
		<result property="userId" column="user_id" />
		
		<result property="userMail" column="user_mail" />
		
		<result property="receiverType" column="receiver_type" />
		
		<result property="type" column="type" />
		
		<result property="orderState" column="order_state" />
		
	</resultMap>
	
	
	<select id="fetchListMap" parameterType="Map"  resultMap="listResultMap">
		<include refid="list"/>
	</select>
	<resultMap id="listResultMap" type="Map">
		
		<result property="delFlag" column="del_flag"/>
		
		<result property="updateTime" column="update_time"/>
		
		<result property="addTime" column="add_time"/>
		
		<result property="departmentName" column="department_name"/>
		
		<result property="departmentId" column="department_id"/>
		
		<result property="userName" column="user_name"/>
		
		<result property="userId" column="user_id"/>
		
		<result property="userMail" column="user_mail" />
		
		<result property="receiverType" column="receiver_type"/>
		
		<result property="type" column="type"/>
		
		<result property="orderState" column="order_state" />
		
	</resultMap>
	
	
	<select id="get" parameterType="Map"  resultMap="listResultEntity">
		<include refid="tuniu.frm.core.IMapBase.fetchListBasic"/>
		where id=#{id} limit 1
	</select>
	
	
	<sql id="insert">
		<include refid="tuniu.frm.core.IMapBase.insertBasic"/>
		(
		  del_flag,
		 
		  update_time,
		 
		  add_time,
		 
		  department_name,
		 
		  department_id,
		 
		  user_name,
		 
		  user_id,
		  
		  user_mail,
		 
		  receiver_type,
		 
		  type,
		  
		  order_state
		 
		) values  (
		
		  #{e.delFlag}, 
		 
		  #{e.updateTime}, 
		 
		  #{e.addTime}, 
		 
		  #{e.departmentName}, 
		 
		  #{e.departmentId}, 
		 
		  #{e.userName}, 
		 
		  #{e.userId},
		  
		  #{e.userMail}, 
		 
		  #{e.receiverType}, 
		 
		  #{e.type},
		  
		  #{e.orderState}
		 
		)
	</sql>
		
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Map" flushCache="true" statementType="PREPARED" > 
		<include refid="insert"/>
	</insert>
	
	<sql id="update">
		<include refid="tuniu.frm.core.IMapBase.updateBasic"/>
		<set>  
			
				<if test="e.delFlag != null">del_flag=#{e.delFlag},</if>
			
				<if test="e.updateTime != null">update_time=#{e.updateTime},</if>
			
				<if test="e.addTime != null">add_time=#{e.addTime},</if>
			
				<if test="e.departmentName != null">department_name=#{e.departmentName},</if>
			
				<if test="e.departmentId != null">department_id=#{e.departmentId},</if>
			
				<if test="e.userName != null">user_name=#{e.userName},</if>
			
				<if test="e.userId != null">user_id=#{e.userId},</if>
				
				<if test="e.userMail != null">user_mail=#{e.userMail},</if>
			
				<if test="e.receiverType != null">receiver_type=#{e.receiverType},</if>
			
				<if test="e.type != null">type=#{e.type},</if>
				
				<if test="e.orderState != null">order_state=#{e.orderState}</if>
			
		</set>
	    where id=#{e.id}
	</sql>	
	
	
	<update id="update" parameterType="Map" flushCache="true" statementType="PREPARED">
		<include refid="update"/>
	</update>
	
</mapper>
