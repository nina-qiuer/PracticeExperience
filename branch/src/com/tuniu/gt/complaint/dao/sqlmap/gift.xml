<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tuniu.gt.complaint.dao.sqlmap.imap.IGiftMap">
	<sql id="list">
		<include refid="tuniu.frm.core.IMapBase.fetchListBasic" />
		<where>
			del_flag = 1
			<if test="solutionId != null">
				and solution_id=#{solutionId}
			</if>
			<if test="complaintId != null">
				and complaint_id=#{complaintId}
			</if>
			<if test="giftNoteId != null">
				and gift_note_id=#{giftNoteId}
			</if>
		</where>
		<if test="dataLimitStart != null">
			limit #{dataLimitStart}
			<if test="dataLimitEnd != null">
				,#{dataLimitEnd}
			</if>
		</if>
	</sql>
	<select id="fetchList" parameterType="Map"  resultMap="listResultEntity">
		<include refid="list"/>
	</select>
	<resultMap id="listResultEntity" type="com.tuniu.gt.complaint.entity.GiftEntity">  
		<result property="giftNoteId" column="gift_note_id" />
		<result property="complaintId" column="complaint_id" />
		<result property="name" column="name" />
		<result property="giftId" column="gift_id" />
		<result property="number" column="number" />
		<result property="solutionId" column="solution_id" />
		<result property="type" column="type" />
		<result property="price" column="price" />
		<result property="remark" column="remark" />
		<result property="delFlag" column="del_flag" />
	</resultMap>
	<select id="fetchListMap" parameterType="Map"  resultMap="listResultMap">
		<include refid="list"/>
	</select>
	<resultMap id="listResultMap" type="Map">
		<result property="giftNoteId" column="gift_note_id" />
		<result property="complaintId" column="complaint_id" />
		<result property="name" column="name" />
		<result property="giftId" column="gift_id" />
		<result property="number" column="number" />
		<result property="solutionId" column="solution_id" />
		<result property="type" column="type" />
		<result property="price" column="price" />
		<result property="remark" column="remark" />
		<result property="delFlag" column="del_flag" />
	</resultMap>
	
	<select id="get" parameterType="Map"  resultMap="listResultEntity">
		<include refid="tuniu.frm.core.IMapBase.fetchListBasic"/>
		where id=#{id} limit 1
	</select>
	
	<sql id="insert">
		<include refid="tuniu.frm.core.IMapBase.insertBasic"/>
		(
		  gift_note_id,
		  gift_id,
		  type,
		  name,
		  price,
		  number,
		  remark
		) values  (
		  #{e.giftNoteId}, 
		  #{e.giftId}, 
		  #{e.type},
		  #{e.name}, 
		  #{e.price},
		  #{e.number}, 
		  #{e.remark}
		)
	</sql>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Map" flushCache="true" statementType="PREPARED" > 
		<include refid="insert"/>
	</insert>
	
	<sql id="update">
		<include refid="tuniu.frm.core.IMapBase.updateBasic"/>
		<set>  
			<if test="e.complaintId != null">complaint_id=#{e.complaintId},</if>
			<if test="e.name != null">name=#{e.name},</if>
			<if test="e.giftId != null">gift_id=#{e.giftId},</if>
			<if test="e.number != null">number=#{e.number},</if>
			<if test="e.solutionId != null">solution_id=#{e.solutionId},</if>
			<if test="e.type != null">type=#{e.type},</if>
			<if test="e.price != null">price=#{e.price},</if>
			<if test="e.remark != null">remark=#{e.remark},</if>
			<if test="e.delFlag != null">del_flag=#{e.delFlag}</if>
		</set>
	    where id=#{e.id}
	</sql>	
	
	<update id="update" parameterType="Map" flushCache="true" statementType="PREPARED">
		<include refid="update"/>
	</update>
	
	<sql id="searchByComplaintId">
		SELECT number, gift_id	FROM ct_gift WHERE complaint_id = #{complaint_id}
	</sql>
	
	<select id="searchByComplaintId" parameterType="Integer"  resultMap="searchResult">
		<include refid="searchByComplaintId"/>
	</select>
	
	<resultMap id="searchResult" type="com.tuniu.gt.complaint.entity.GiftEntity">
		<result property="giftId" column="gift_id" />
		<result property="number" column="number" />
	</resultMap>
	
	<delete id="deleteByGiftNoteId" parameterType="Integer">
		DELETE FROM ct_gift WHERE gift_note_id = #{giftNoteId}
	</delete>
	
	<update id="updateGiftNoteId" parameterType="Map" flushCache="true" statementType="PREPARED">
		UPDATE ct_gift SET gift_note_id=#{giftNoteId} WHERE complaint_id=#{complaintId}
	</update>
	
</mapper>
