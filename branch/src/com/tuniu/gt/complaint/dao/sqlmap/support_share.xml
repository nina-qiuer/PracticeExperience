<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  

<mapper namespace="com.tuniu.gt.complaint.dao.sqlmap.imap.ISupportShareMap"> 
	<sql id="list">
		<include refid="tuniu.frm.core.IMapBase.fetchListBasic"/>
		<where>
			del_flag = 1
			<if test="solutionId!=null">
				and share_id=#{solutionId}
			</if>
			<if test="shareId!=null">
				and share_id=#{shareId}
			</if>
			<if test="name!=null">
				and name=#{name}
			</if>
			<if test="code!=null">
				and code=#{code}
			</if>
			<if test="agencyName!=null and agencyName!=''">
				and name like '%${agencyName}%'
			</if>
			<if test="number!=null">
				and number=#{number}
			</if>
			<if test="complaintId!=null">
				and complaint_id=#{complaintId}
			</if>
		</where>
		<if test="dataLimitStart != null">
			limit #{dataLimitStart}
			<if test="dataLimitEnd != null">
				,#{dataLimitEnd}
			</if>
		</if>
	</sql>
	<select id="fetchList" parameterType="Map"  resultMap="listResultEntity">
		<include refid="list"/>
	</select>
	<resultMap id="listResultEntity" type="com.tuniu.gt.complaint.entity.SupportShareEntity">
		<result property="id" column="id" />
		<result property="complaintId" column="complaint_id" />
		<result property="shareId" column="share_id" />
		<result property="code" column="code" />
		<result property="name" column="name" />
		<result property="number" column="number" />
		<result property="foreignCurrencyType" column="foreignCurrencyType" />
		<result property="foreignCurrencyName" column="foreignCurrencyName" />
		<result property="foreignCurrencyNumber" column="foreignCurrencyNumber" />
		<result property="remark" column="remark" />
		<result property="addTime" column="add_time" />
		<result property="updateTime" column="update_time" />
		<result property="delFlag" column="del_flag" />
		<result property="confirmState" column="confirm_state" />
		<result property="expireTime" column="expire_time" />
		<result property="oa_id" column="oa_id" />
	</resultMap>
	
	<select id="fetchListMap" parameterType="Map"  resultMap="listResultMap">
		<include refid="list"/>
	</select>
	<resultMap id="listResultMap" type="Map">
		<result property="id" column="id" />
		<result property="complaintId" column="complaint_id" />
		<result property="shareId" column="share_id" />
		<result property="code" column="code" />
		<result property="name" column="name" />
		<result property="number" column="number" />
		<result property="foreignCurrencyType" column="foreignCurrencyType" />
		<result property="foreignCurrencyName" column="foreignCurrencyName" />
		<result property="foreignCurrencyNumber" column="foreignCurrencyNumber" />
		<result property="remark" column="remark" />
		<result property="addTime" column="add_time" />
		<result property="updateTime" column="update_time" />
		<result property="delFlag" column="del_flag" />
		<result property="confirmState" column="confirm_state" />
		<result property="expireTime" column="expire_time" />
		<result property="oa_id" column="oa_id" />
	</resultMap>
	
	<select id="get" parameterType="Map"  resultMap="listResultEntity">
		<include refid="tuniu.frm.core.IMapBase.fetchListBasic"/>
		where id=#{id} limit 1
	</select>
	
	<sql id="insert">
		<include refid="tuniu.frm.core.IMapBase.insertBasic"/>
		(
		  complaint_id,
		  share_id,
		  code,
		  name,
		  number,
		  foreignCurrencyType,
		  foreignCurrencyName,
		  foreignCurrencyNumber,
		  <if test="e.confirmState != null">confirm_state,</if>
		  <if test="e.confirmer != null">confirmer,</if>
		  <if test="e.confirmTime != null">confirm_time,</if>
		  <if test="e.expireTime != null">expire_time,</if>
		  remark
		) values (
		  #{e.complaintId},
		  #{e.shareId},
		  #{e.code},
		  #{e.name},
		  #{e.number},
		  #{e.foreignCurrencyType},
		  #{e.foreignCurrencyName},
		  #{e.foreignCurrencyNumber},
		  <if test="e.confirmState != null">#{e.confirmState},</if>
		  <if test="e.confirmer != null">#{e.confirmer},</if>
		  <if test="e.confirmTime != null">#{e.confirmTime},</if>
		  <if test="e.expireTime != null">#{e.expireTime},</if>
		  #{e.remark}
		)
	</sql>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Map" flushCache="true" statementType="PREPARED" > 
		<include refid="insert"/>
	</insert>
	
	<sql id="update">
		<include refid="tuniu.frm.core.IMapBase.updateBasic"/>
		<set>  
			<if test="e.number != null">number=#{e.number},</if>
			<if test="e.code != null">code=#{e.code},</if>
			<if test="e.name != null">name=#{e.name},</if>
			<if test="e.delFlag != null">del_flag=#{e.delFlag},</if>
			<if test="e.foreignCurrencyNumber != null">foreignCurrencyNumber=#{e.foreignCurrencyNumber},</if>
			<if test="e.foreignCurrencyType != null">foreignCurrencyType=#{e.foreignCurrencyType},</if>
			<if test="e.foreignCurrencyName != null">foreignCurrencyName=#{e.foreignCurrencyName},</if>
			<if test="e.confirmState != null">confirm_state=#{e.confirmState},</if>
			<if test="e.expireTime != null">expire_time=#{e.expireTime},</if>
			<if test="e.confirmer != null">confirmer=#{e.confirmer},</if>
		    <if test="e.confirmTime != null">confirm_time=#{e.confirmTime},</if>
		    <if test="e.oa_id != null">oa_id=#{e.oa_id},</if>
			update_time=CURRENT_TIMESTAMP
		</set>
	    where id=#{e.id}
	</sql>
	
	<update id="update" parameterType="Map" flushCache="true" statementType="PREPARED">
		<include refid="update"/>
	</update>
	
	<update id="updateByCodeAndCompId" parameterType="Map" flushCache="true" statementType="PREPARED">
		UPDATE ct_support_share
		<set>
			confirm_state=#{confirmState},
			expire_time=#{expireTime},
			update_time=CURRENT_TIMESTAMP
		</set>
	    WHERE complaint_id=#{complaintId} AND code=#{code} AND del_flag=1
	</update>
	
	<update id="confirmPayoutAuto" flushCache="true" statementType="PREPARED">
	    <![CDATA[
		UPDATE ct_support_share SET confirm_state=2,confirm_time=CURRENT_TIMESTAMP,confirmer='robot' 
		WHERE confirm_state =0 AND '2014-11-01 00:00:00'<expire_time AND expire_time<=CURRENT_TIMESTAMP AND del_flag=1
		]]>
	</update>
	
	<delete id="deleteByShareId" parameterType="Integer">
		DELETE FROM ct_support_share WHERE share_id = #{shareId}
	</delete>
	
</mapper>
