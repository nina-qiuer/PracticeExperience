<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  

<mapper namespace="com.tuniu.gt.complaint.dao.sqlmap.imap.IEmployeeShareMap"> 
	<sql id="list">
		<include refid="tuniu.frm.core.IMapBase.fetchListBasic"/>
		<where>
			del_flag = 1
			<if test="shareId!=null">
				and share_id=#{shareId}
			</if>
			
			<if test="complaintId!=null">
				and complaint_id=#{complaintId}
			</if>
		</where>
		<if test="dataLimitStart != null">
			limit #{dataLimitStart}
			<if test="dataLimitEnd != null">
				,#{dataLimitEnd}
			</if>
		</if>
	</sql>
	<select id="fetchList" parameterType="Map"  resultMap="listResultEntity">
		<include refid="list"/>
	</select>
	<resultMap id="listResultEntity" type="com.tuniu.gt.complaint.entity.EmployeeShareEntity">
		<result property="id" column="id" />
		<result property="shareId" column="share_id" />
		<result property="userId" column="user_id" />
		<result property="name" column="name" />
		<result property="number" column="number" />
		<result property="addTime" column="add_time" />
		<result property="updateTime" column="update_time" />
		<result property="delFlag" column="del_flag" />
	</resultMap>
	
	<select id="fetchListMap" parameterType="Map"  resultMap="listResultMap">
		<include refid="list"/>
	</select>
	<resultMap id="listResultMap" type="Map">
		<result property="id" column="id" />
		<result property="shareId" column="share_id" />
		<result property="userId" column="user_id" />
		<result property="name" column="name" />
		<result property="number" column="number" />
		<result property="addTime" column="add_time" />
		<result property="updateTime" column="update_time" />
		<result property="delFlag" column="del_flag" />
	</resultMap>
	
	<select id="get" parameterType="Map"  resultMap="listResultEntity">
		<include refid="tuniu.frm.core.IMapBase.fetchListBasic"/>
		where id=#{id} limit 1
	</select>
	
	<sql id="insert">
		<include refid="tuniu.frm.core.IMapBase.insertBasic"/>
		(
		  share_id,
		  user_id,
		  name,
		  number
		) values (
		  #{e.shareId},
		  #{e.userId},
		  #{e.name},
		  #{e.number}
		)
	</sql>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Map" flushCache="true" statementType="PREPARED" > 
		<include refid="insert"/>
	</insert>
	
	<sql id="update">
		<include refid="tuniu.frm.core.IMapBase.updateBasic"/>
		<set>
			<if test="e.delFlag != null">del_flag=#{e.delFlag},</if>
			update_time=CURRENT_TIMESTAMP
		</set>
	    where id=#{e.id}
	</sql>	
	
	<update id="update" parameterType="Map" flushCache="true" statementType="PREPARED">
		<include refid="update"/>
	</update>
	
	<delete id="deleteByShareId" parameterType="Integer">
		DELETE FROM ct_employee_share WHERE share_id = #{shareId}
	</delete>
	
</mapper>
