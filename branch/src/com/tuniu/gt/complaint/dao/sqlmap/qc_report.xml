<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  

<mapper namespace="com.tuniu.gt.complaint.dao.sqlmap.imap.IQcReportMap"> 
	<sql id="list">
		<include refid="tuniu.frm.core.IMapBase.fetchListBasic"/>
		<where>1=1
			<if test="qid != null">
				AND qc_id = #{qid}
			</if>
		</where>
		<if test="dataLimitStart != null">
			limit #{dataLimitStart}
			<if test="dataLimitEnd != null">
				,#{dataLimitEnd}
			</if>
		</if>
	</sql>
	<select id="fetchList" parameterType="Map"  resultMap="listResultEntity">
		<include refid="list"/>
	</select>
	<resultMap id="listResultEntity" type="com.tuniu.gt.complaint.entity.QcReportEntity">  
		
		<result property="bulidTime" column="bulid_time" />
		
		<result property="addTime" column="add_time" />
		
		<result property="qcId" column="qc_id" />
		
		<result property="updateTime" column="update_time" />
		
		<result property="delFlag" column="del_flag" />
		
	</resultMap>
	
	
	<select id="fetchListMap" parameterType="Map"  resultMap="listResultMap">
		<include refid="list"/>
	</select>
	<resultMap id="listResultMap" type="Map">
		
		<result property="bulidTime" column="bulid_time"/>
		
		<result property="addTime" column="add_time"/>
		
		<result property="qcId" column="qc_id"/>
		
		<result property="updateTime" column="update_time"/>
		
		<result property="delFlag" column="del_flag"/>
		
	</resultMap>
	
	
	<select id="get" parameterType="Map"  resultMap="listResultEntity">
		<include refid="tuniu.frm.core.IMapBase.fetchListBasic"/>
		where id=#{id} limit 1
	</select>
	
	<!-- get report list by QC id -->
	<select id="getReportListByQid" parameterType="Integer"  resultMap="reportsResult">
		SELECT a.id AS report_id, a.*, b.id AS question_id, b.*, c.id AS track_id, c.*
		FROM ct_qc_report a, ct_qc_question b, ct_qc_tracker c
		WHERE a.del_flag = 0 AND b.del_flag = 0 and c.del_flag = 0 AND a.id=b.report_id AND b.id=c.question_id AND a.qc_id=#{qid}
	</select>
	<resultMap id="reportsResult" type="com.tuniu.gt.complaint.entity.QcReportEntity">  
		<!--<result property="id" column="question_id" />-->
		<id property="id" column="report_id"/>
		<result property="qcId" column="qc_id" />
		<result property="bulidTime" column="bulid_time" />
		<result property="addTime" column="add_time" />
		<result property="updateTime" column="update_time" />
		<result property="delFlag" column="del_flag" />
		<collection property="questions" ofType="com.tuniu.gt.complaint.entity.QcQuestionEntity"> 
			<id property="id" column="question_id"/>
			<result property="smallClassId" column="small_class_id"/>				
			<result property="smallClassName" column="small_class_name"/>				
			<result property="bigClassId" column="big_class_id"/>
			<result property="bigClassName" column="big_class_name"/>
			<result property="compLevel" column="comp_level" />
			<result property="conclusion" column="conclusion" />
			<result property="scoreLevel" column="score_level" />
			<result property="scoreValue" column="score_value" />
			<result property="scoreTarget1" column="score_target1" />
			<result property="scoreTarget2" column="score_target2" />
			<result property="startCity" column="start_city" />
			<result property="endCity" column="end_city" />
			<result property="airfare" column="airfare" />
			<result property="productPrice" column="product_price" />
			<collection property="trackers" ofType="com.tuniu.gt.complaint.entity.QcTrackerEntity"> 
				<id property="id" column="track_id"/>
					<result property="questionId" column="question_id"/>
					<result property="improver" column="improver"/>				
					<result property="responsiblePerson" column="responsible_person"/>				
					<result property="responsibility" column="responsibility"/>	
					<result property="respSecond" column="resp_second"/>	
					<result property="respThird" column="resp_third"/>				
					<result property="position" column="position"/>
			</collection>
		</collection>

	</resultMap>
	
	<sql id="insert">
		<include refid="tuniu.frm.core.IMapBase.insertBasic"/>
		(
		  bulid_time,
		 
		  add_time,
		 
		  qc_id,
		 
		  update_time,
		 
		  del_flag
		 
		) values  (
		
		  #{e.bulidTime}, 
		 
		  #{e.addTime}, 
		 
		  #{e.qcId}, 
		 
		  #{e.updateTime}, 
		 
		  #{e.delFlag} 
		 
		)
	</sql>
		
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Map" flushCache="true" statementType="PREPARED" > 
		<include refid="insert"/>
	</insert>
	
	<sql id="update">
		<include refid="tuniu.frm.core.IMapBase.updateBasic"/>
		<set>  
			
				<if test="e.bulidTime != null">bulid_time=#{e.bulidTime},</if>
			
				<if test="e.addTime != null">add_time=#{e.addTime},</if>
			
				<if test="e.qcId != null">qc_id=#{e.qcId},</if>
			
				<if test="e.updateTime != null">update_time=#{e.updateTime},</if>
			
				<if test="e.delFlag != null">del_flag=#{e.delFlag}</if>
			
		</set>
	    where id=#{e.id}
	</sql>	
	
	
	<update id="update" parameterType="Map" flushCache="true" statementType="PREPARED">
		<include refid="update"/>
	</update>
	
	
	<sql id="delete">
		<include refid="tuniu.frm.core.IMapBase.deleteBasic"/>
	</sql>
	
	<delete id="delete">
		<include refid="delete"/>
		  where id=#{id}
	</delete>
	
</mapper>
